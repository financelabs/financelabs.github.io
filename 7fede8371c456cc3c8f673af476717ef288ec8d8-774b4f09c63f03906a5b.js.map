{"version":3,"file":"7fede8371c456cc3c8f673af476717ef288ec8d8-774b4f09c63f03906a5b.js","mappings":"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","sources":["webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/@restart/ui/esm/Button.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Button.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Col.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Feedback.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormContext.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormCheckInput.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormCheckLabel.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormCheck.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormControl.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormFloating.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormGroup.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormLabel.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormRange.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormSelect.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FormText.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Switch.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/FloatingLabel.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Form.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/dom-helpers/esm/camelize.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/warning/warning.js"],"sourcesContent":["const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["_excluded","useButtonProps","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","_ref","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","size","active","className","prefix","defaultProps","Col","colProps","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","propTypes","tooltip","Feedback","FormCheckInput","id","isValid","isInvalid","controlId","useContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","some","child","hasChildOfType","input","value","Input","Label","FormControl","htmlSize","plaintext","readOnly","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","BsComponent","Tag","resolvedPrefix","warning","module","exports"],"sourceRoot":""}