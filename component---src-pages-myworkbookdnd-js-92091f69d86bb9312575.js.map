{"version":3,"file":"component---src-pages-myworkbookdnd-js-92091f69d86bb9312575.js","mappings":"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","sources":["webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/CardImg.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Card.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./node_modules/react-bootstrap/esm/Table.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/../utilities/createMinimalProtoArray.js","webpack://@r-ichard/gatsby-starter-bootstrap-5/./src/pages/myworkbookdnd.js"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","const alphabet = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\"\r\n];\r\n\r\nfunction createMinimalProtoArray(protoDataObject = {}) {\r\n    console.log(protoDataObject);\r\n\r\n    let maxRow = 0;\r\n    let maxColumn = 0;\r\n\r\n    Object.keys(protoDataObject).forEach(objKey => {\r\n        if (maxColumn < alphabet.findIndex(item => item === objKey.substring(0, 1))) {\r\n            maxColumn = alphabet.findIndex(item => item === objKey.substring(0, 1)) + 1\r\n        }\r\n        if (maxRow < parseInt(objKey.substring(1))) {\r\n            maxRow = parseInt(objKey.substring(1))\r\n        }\r\n    });\r\n\r\n    console.log(maxColumn, maxRow);\r\n    let array = new Array(maxRow).fill('').map(() => new Array(maxColumn).fill(''));\r\n\r\n    Object.keys(protoDataObject).map((objKey) => {\r\n        const [col, ...row] = objKey;\r\n        let colArrayIndex = alphabet.findIndex((item) => item === col);\r\n        let rowArrayIndex = parseInt(row) - 1;\r\n        //      console.log(colArrayIndex, rowArrayIndex);\r\n        array[rowArrayIndex][colArrayIndex] = protoDataObject[objKey];\r\n    });\r\n    return array;\r\n}\r\n\r\nexport default createMinimalProtoArray","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport produce from \"immer\";\r\n\r\nimport Layout from \"../components/layout\"\r\nimport { Seo } from \"../components/seo\"\r\n\r\nimport {\r\n    fetchContent,\r\n    selectCaseArray,\r\n    selectCaseDNDArrayFinal,\r\n    seedArray,\r\n    selectSelectedNote,\r\n    setStoreObject\r\n} from \"../features/case/caseSlice\";\r\n\r\nimport { selectApplication, loadState } from \"../features/application/applicationSlice\";\r\n\r\nimport DragAndDrop from \"../components/DragAndDrop\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n\r\nimport pushKeyFirebaseNode from \"../features/firebase/pushKeyFirebaseNode\";\r\nimport updateFirebaseNode from \"../features/firebase/updateFirebaseNode\";\r\n\r\nimport createMinimalProtoArray from \"../../../utilities/createMinimalProtoArray\"\r\n\r\n\r\nfunction MyWorkbookDND() {\r\n    const dispatch = useDispatch();\r\n    React.useEffect(() => {\r\n        console.log(loadState());\r\n\r\n        dispatch(setStoreObject({ key: \"caseType\", value: \"myworkbook\" }));\r\n\r\n        dispatch(seedArray({\r\n            arrayName: \"caseDndItemsArray\",\r\n            arrayItems: []\r\n        }));\r\n        dispatch(seedArray({\r\n            arrayName: \"caseDndItems2Array\",\r\n            arrayItems: []\r\n        }));\r\n        dispatch(seedArray({\r\n            arrayName: \"caseDNDArray\",\r\n            arrayItems: []\r\n        }));\r\n        dispatch(setStoreObject({ key: \"selectedNote\", value: {} }))\r\n        dispatch(fetchContent({ type: \"myworkbookdnd\", email: loadState()?.application.email }));\r\n\r\n    }, [dispatch])\r\n\r\n    return <Layout>\r\n        <div className=\"container text-center my-5\">\r\n            <SavePosts />\r\n            <SelectColumns />\r\n        </div>\r\n    </Layout>\r\n}\r\nexport default MyWorkbookDND\r\n\r\nexport const Head = () => (<Seo title=\"My workbook Drag and Drop\" />)\r\n\r\n\r\nfunction SavePosts() {\r\n    const posts = useSelector(selectCaseDNDArrayFinal);\r\n    const applicationState = useSelector(selectApplication);\r\n\r\n\r\n    function doSave() {\r\n        console.log(posts);\r\n\r\n\r\n\r\n        // let uniqueThemes = [...new Set([posts.map(item => item?.theme)])];\r\n        // console.log(uniqueThemes);\r\n\r\n        if (!!applicationState?.email) {\r\n            let userEmail = applicationState.email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n            let updates = {};\r\n            posts.forEach(element => {\r\n\r\n                if (element.dndcolumn === \"Корзина\") {\r\n                    updates[\"/usersCraft/\" + userEmail + \"/posts/\" + element.id] = null;\r\n                    let updatedelement = { ...element, theme: \"Корзина\", id: pushKeyFirebaseNode(\"/usersCraft/\" + userEmail + \"/posts/\") };\r\n                    let { dndcolumn, ...rest } = updatedelement;\r\n                    updates[\"/usersCraft/\" + userEmail + \"/posts/\" + updatedelement.id] = rest;\r\n\r\n                } else {\r\n                    let updatedelement = { ...element, theme: element.dndcolumn };\r\n                    let { dndcolumn, ...rest } = updatedelement;\r\n                    updates[\"/usersCraft/\" + userEmail + \"/posts/\" + element.id] = rest;\r\n                }\r\n            });\r\n            console.log(updates);\r\n            updateFirebaseNode(updates, \"reload\");\r\n        }\r\n    }\r\n\r\n    if (posts.length > 0) {\r\n        return <div className=\"d-grid gap-2 m-2\">\r\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => doSave()}>\r\n                Сохранить изменения\r\n            </Button>\r\n        </div>\r\n    }\r\n    return null\r\n}\r\n\r\n\r\n\r\n\r\nconst selectColumnReducer = produce((draft, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case \"SETCOLUMNTITLE\": { draft[action.title] = action.value }\r\n    }\r\n});\r\n\r\n\r\nfunction SelectColumns() {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(selectCaseArray);\r\n\r\n    const [state, localDispatch] = React.useReducer(selectColumnReducer,\r\n        {\r\n            itemsTitle: \"\",\r\n            items2Title: \"\"\r\n        }\r\n    );\r\n\r\n\r\n    let uniqueThemes = [...new Set([posts.map(item => item?.theme)])].includes(\"Корзина\") ?\r\n        [...new Set([\"...\", ...posts.map(item => item?.theme)])]\r\n        : [...new Set([\"...\", \"Корзина\", ...posts.map(item => item?.theme)])]\r\n\r\n    if (posts.length > 0) {\r\n\r\n        const handleChangeItems = (e) => {\r\n            localDispatch({\r\n                type: \"SETCOLUMNTITLE\",\r\n                title: \"itemsTitle\",\r\n                value: uniqueThemes[e.target.value]\r\n            });\r\n\r\n            let caseDNDArray = posts.filter(item => (item.theme === uniqueThemes[e.target.value] || item.theme === state.items2Title));\r\n            dispatch(seedArray({\r\n                arrayName: \"caseDNDArrayInitial\",\r\n                arrayItems: caseDNDArray\r\n            }));\r\n\r\n\r\n\r\n            dispatch(seedArray({\r\n                arrayName: \"caseDndItemsArray\",\r\n                arrayItems: posts\r\n                    .filter(item => item.theme === uniqueThemes[e.target.value])\r\n                    .map(item => {\r\n                        return {\r\n                            id: !!item?.id ? item.id : pushKeyFirebaseNode(\"/usersCraft/\"),\r\n                            dndcontent: item.title + \" \" + item.date,\r\n                            dndcolumn: item.theme,\r\n                            ...item\r\n                        }\r\n                    })\r\n            }));\r\n            // dispatch(setStoreObject({\r\n            //     key: \"key\",\r\n            //     value: pushKeyFirebaseNode(\"/usersCraft/\")\r\n            // }));\r\n        }\r\n\r\n        const handleChangeItems2 = (e) => {\r\n            localDispatch({\r\n                type: \"SETCOLUMNTITLE\",\r\n                title: \"items2Title\",\r\n                value: uniqueThemes[e.target.value]\r\n            });\r\n\r\n            let caseDNDArray = posts.filter(item => (item.theme === state.itemsTitle || item.theme === uniqueThemes[e.target.value]));\r\n            dispatch(seedArray({\r\n                arrayName: \"caseDNDArrayInitial\",\r\n                arrayItems: caseDNDArray\r\n            }));\r\n\r\n            dispatch(seedArray({\r\n                arrayName: \"caseDndItems2Array\",\r\n                arrayItems: posts\r\n                    .filter(item => item.theme === uniqueThemes[e.target.value])\r\n                    .map(item => {\r\n                        return {\r\n                            id: !!item?.id ? item.id : pushKeyFirebaseNode(\"/usersCraft/\"),\r\n                            dndcontent: item.title + \" \" + item.date,\r\n                            dndcolumn: item.theme,\r\n                            ...item\r\n                        }\r\n                    })\r\n            }));\r\n            // dispatch(setStoreObject({\r\n            //     key: \"key\",\r\n            //     value: pushKeyFirebaseNode(\"/usersCraft/\")\r\n            // }));\r\n        }\r\n\r\n        console.log(state);\r\n\r\n        return <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Select aria-label=\"From\" onChange={handleChangeItems}  >\r\n                        {uniqueThemes.map((item, index) => <option key={index} value={index.toString()}>{item}</option>)}\r\n                    </Form.Select>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Select aria-label=\"To\" onChange={handleChangeItems2} >\r\n                        {uniqueThemes.map((item, index) => <option key={index} value={index.toString()}>{item}</option>)}\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row>\r\n            <Row><ShowPost /></Row>\r\n            <Row><DragAndDrop key={state.itemsTitle + state.items2Title} /></Row>\r\n        </Container>\r\n    }\r\n\r\n    return null\r\n\r\n};\r\n\r\nfunction ShowPost() {\r\n    const dispatch = useDispatch();\r\n    const selectedPost = useSelector(selectSelectedNote);\r\n\r\n    if (typeof selectedPost === 'object' && Object.keys(selectedPost).length > 0) {\r\n        return <Card className=\"my-2\">\r\n            <Card.Header>{selectedPost?.theme}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>{selectedPost?.title}</Card.Title>\r\n                <Card.Text dangerouslySetInnerHTML={{ __html: selectedPost?.quizString }}>\r\n                </Card.Text>\r\n                {selectedPost?.type === \"spreadsheet\" ?\r\n                    <ShowXlTableArrayOfArrays xlArray={createMinimalProtoArray(selectedPost.content)} />\r\n                    : null\r\n                }\r\n                <Button variant=\"secondary\" size=\"sm\"\r\n                    onClick={() => dispatch(setStoreObject({ key: \"selectedNote\", value: {} }))} >Закрыть</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted text-center\">{selectedPost?.date}</Card.Footer>\r\n        </Card>\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nfunction ShowXlTableArrayOfArrays({ xlArray }) {\r\n    return <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n                <th> </th>\r\n                {xlArray[0].map((column, columnIndex) => (\r\n                    <th key={columnIndex} className=\"text-center\">\r\n                        {alphabet[columnIndex]}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {xlArray.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                    <td>\r\n                        {\" \"}\r\n                        <small className=\"ml-1\">{rowIndex + 1}</small>\r\n                    </td>\r\n                    {row.map((column, columnIndex) => (\r\n                        <td key={rowIndex + columnIndex}>\r\n                            <small>{row[columnIndex]}</small>\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport const alphabet = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\"\r\n];\r\n\r\n\r\n"],"names":["className","p","ref","CardImg","bsPrefix","variant","as","Component","props","prefix","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","striped","bordered","borderless","hover","size","responsive","decoratedBsPrefix","classes","table","responsiveClass","alphabet","protoDataObject","console","log","maxRow","maxColumn","keys","forEach","objKey","findIndex","item","substring","parseInt","array","Array","fill","map","col","row","colArrayIndex","rowArrayIndex","dispatch","useDispatch","React","_loadState","loadState","setStoreObject","key","seedArray","arrayName","arrayItems","fetchContent","type","email","application","Layout","SavePosts","SelectColumns","Head","Seo","title","posts","useSelector","selectCaseDNDArrayFinal","applicationState","selectApplication","length","Button","onClick","userEmail","replace","updates","element","dndcolumn","id","updatedelement","theme","pushKeyFirebaseNode","rest","updateFirebaseNode","doSave","selectColumnReducer","produce","draft","action","selectCaseArray","state","localDispatch","itemsTitle","items2Title","uniqueThemes","_toConsumableArray","Set","includes","concat","handleChangeItems","e","target","caseDNDArray","filter","dndcontent","date","handleChangeItems2","Container","Row","Col","Form","onChange","index","toString","ShowPost","DragAndDrop","selectedPost","selectSelectedNote","dangerouslySetInnerHTML","__html","quizString","ShowXlTableArrayOfArrays","xlArray","createMinimalProtoArray","content","_ref","Table","column","columnIndex","rowIndex"],"sourceRoot":""}